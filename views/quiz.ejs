<link rel="stylesheet" href="styles.css">
    <div class="container mt-5">
        <div class="card quiz-card">
            <div class="card-header text-center">
                <h2>Online Quiz</h2>
                <div class="progress mt-3">
                    <div class="progress-bar" role="progressbar" style="width: 0%;" id="progressBar"></div>
                </div>
            </div>
            <div class="card-body">
                <h2 class="question">Question </h2>
                <div class="choice-container">
                    <div><button class="btn btn-primary choices unselected" id="choice-1">A</button></div>
                    <div><button class="btn btn-primary choices unselected" id="choice-2">B</button></div>
                    <div><button class="btn btn-primary choices unselected" id="choice-3">C</button></div>
                    <div><button class="btn btn-primary choices unselected" id="choice-4">D</button></div>
                </div>
                <div class="result"></div>
                <div></div>
                <button type="button" class="btn btn-success prev"  disabled>Prev</button>
                <button type="button" class="btn btn-success submit">Next</button>
                <div class="card">
                    <a href="#" class="btn btn-info test-summary" style="display:none;">Test Summary</a>
                </div>
            </div>
        </div>
    </div>
    <script>
        let currentQuestion = 0;
       
var questions1 = []; 
const quiz = JSON.parse(`<%- JSON.stringify(quiz)%>`);
console.log('quiz', quiz);
const numQuestions = quiz.numberOfQuestions; 
quiz.questions.forEach(quest =>{
    let q = []; 
    console.log(quest);
    q.push(quest.questionText);
    quest.options.forEach(op =>{
        q.push(op.optionText); 
    });
    q.push(quest.correctOption);
    questions1.push(q); 
});
const questions = questions1;
let userChoice = [];

const showQuestion = () => {
    let question = questions[currentQuestion]; 
    console.log(question)
    document.querySelector('.question').innerHTML = `Q${currentQuestion+1}: ` + question[0]; 
    document.querySelectorAll('.choices').forEach((e, ind)=>{
        e.innerHTML = question[ind+1]; 
    });
    // to show the option selected.
    if(userChoice[currentQuestion])
    {
        document.querySelectorAll('.choices').forEach( (e, ind) =>{
            if(parseInt(userChoice[currentQuestion].split('-')[1])-1 == ind)
            {
                e.classList.remove('unselected');
                e.classList.add('selected');
            }
            else
            {
                e.classList.remove('selected');
                e.classList.add('unselected');
            }  
        });
    }
    const prev = document.querySelector('.prev');
    if(currentQuestion == 0)
        prev.disabled = true; 
    else
        prev.disabled = false; 
    var submit = document.querySelector('.submit');
    if(currentQuestion == questions.length-1)
        submit.innerHTML = 'Submit'; 
    else
        submit.innerHTML = 'Next'; 

    updateProgressBar(currentQuestion); 

};
const nextQuestion = ()=>{
    currentQuestion++; 
    showQuestion(); 
};
const prevQuestion = ()=>{
    currentQuestion--; 
    showQuestion(); 
};
    showQuestion();
    

    document.querySelectorAll('.choices').forEach( (e, ind)=>{
        e.addEventListener('click', ()=>
        {
            userChoice[currentQuestion] = e.id; 
            console.log(userChoice);
            document.querySelectorAll('.choices').forEach( (e, ind) =>{
                if(parseInt(userChoice[currentQuestion].split('-')[1])-1 == ind)
                {
                    e.classList.remove('unselected');
                    e.classList.add('selected');
                }
                else
                {
                    e.classList.remove('selected');
                    e.classList.add('unselected');
                }  
            })
        })
    });

    let correct = 0;
    let unanswered = 0;
    let wrong = 0; 
    let evaluationResults = {};
    const evaluate = () => {

    userChoice.forEach((item, ind) => {
        if (parseInt(item.split('-')[1]) == (questions[ind][5])) {
            correct++;
        } else if(parseInt(item.split('-')[1]) != (questions[ind][5]))
            wrong++; 
    });
    unanswered = numQuestions - correct - wrong; 
    document.querySelector('.result').innerHTML = `The number of correct answers are ${correct} out of ${questions.length} ! <a href='/result' onclick="summary()">Test Summary</a>`; 
    document.querySelector('.result').style.display = 'block';
    const totalQuestions = questions.length;

        evaluationResults = {
            correctAnswers: correct,
            totalQuestions: totalQuestions,
            unanswered: unanswered, 
            wrong: wrong
        };

        console.log('Evaluation Results:', evaluationResults);

        const summaryLink = document.querySelector('.test-summary');
        summaryLink.href = `/result?correct=${evaluationResults.correctAnswers}&totalQuestions=${evaluationResults.totalQuestions}&unanswered=${evaluationResults.unanswered}&wrong=${evaluationResults.wrong}`;
        summaryLink.style.display = 'block';

        document.querySelector('.result').innerHTML = `You have completed the quiz. Click "Test Summary" to view your results.`;
        document.querySelector('.result').style.display = 'block';
};
const summary = ()=>{
    fetch('/result', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            correctAnswers: correct,
            totalQuestions: numQuestions,
            unanswered: unanswered
        })
    })
    .then(response => {
        if(!response.ok){
            throw new Error('Network response was not ok');
        }
        return response.json()
    })
    
    .catch(error => console.log('Error:', error));
}; 


    //Event Listener for prev button
    var prev = document.querySelector('.prev'); 
    prev.addEventListener('click', ()=>{
        document.querySelectorAll('.choices').forEach( (e, ind) =>{
            e.classList.remove('selected');
            e.classList.add('unselected')
        }); 
        if(currentQuestion >= 0)
            prevQuestion(); 
    });

    // Event Listerner for next button.
    var submit = document.querySelector('.submit');
    console.log(submit);

    submit.addEventListener('click', ()=>{
        document.querySelectorAll('.choices').forEach( (e, ind) =>{
            e.classList.remove('selected');
            e.classList.add('unselected')
        });
       
        if(currentQuestion < questions.length-1)
            nextQuestion();
        else 
            {
                evaluate(); 
                submit.disabled = true;
                prev.disabled = true; 
            }

    });
    

        function updateProgressBar(index) {
            const progressBar = document.getElementById('progressBar');
            const percentage = ((index + 1) / questions.length) * 100;
            progressBar.style.width = percentage + '%';
            progressBar.innerText = `${index+1}/${numQuestions}`;
        }
    </script>

